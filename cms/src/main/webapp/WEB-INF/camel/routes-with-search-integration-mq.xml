<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2014-2014 Hippo B.V. (http://www.onehippo.com)

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                      http://camel.apache.org/schema/spring
                      http://camel.apache.org/schema/spring/camel-spring.xsd">

  <bean id="jmsConnectionFactory" class="org.apache.qpid.jms.JmsConnectionFactory">
    <property name="remoteURI" value="amqps://${jms.remoteuri}?amqp.traceFrames=true&amp;amqp.idleTimeout=120000"/>
    <property name="username" value="${jms.username}"/>
    <property name="password" value="${jms.password}"/>
  </bean>

  <bean id="jmsCachingConnectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
    <property name="targetConnectionFactory" ref="jmsConnectionFactory"/>
  </bean>

  <bean id="jmsConfig" class="org.apache.camel.component.jms.JmsConfiguration">
    <property name="connectionFactory" ref="jmsCachingConnectionFactory"/>
    <property name="cacheLevelName" value="CACHE_CONSUMER"/>
  </bean>

  <bean id="amqp" class="org.apache.camel.component.amqp.AMQPComponent">
    <property name="configuration" ref="jmsConfig"/>
  </bean>

  <camelContext id="search-integration" xmlns="http://camel.apache.org/schema/spring">

    <route id="Route-HippoEventBus-to-SB">

      <!-- Subscribe publish/depublish events as JSON from HippoEventBus. -->
      <from uri="hippoevent:?category=workflow&amp;action=publish,depublish"/>

      <!-- Convert the JSON message to String. -->
      <convertBodyTo type="java.lang.String"/>

      <!-- Leave log. -->
      <to uri="log:org.onehippo.forge.camel.demo?level=INFO"/>

      <!-- Store the JSON string to a file in the 'inbox' folder. disabled for production purposes.. enable for dev -->
      <!--<to uri="file:inbox?autoCreate=true&amp;charset=utf-8"/>-->

      <to uri="amqp:topic:content-search"/>

    </route>

  </camelContext>


</beans>